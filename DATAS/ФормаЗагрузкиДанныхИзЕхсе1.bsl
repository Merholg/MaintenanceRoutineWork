
&AtServer
Procedure ПрочитатьИзВХНаСервере(АдресВХ, РасширениеИмениФайла)
	Try
		ДДанные = GetFromTempStorage(АдресВХ);
		ИмяВременногоФайла = GetTempFileName(РасширениеИмениФайла);
		ДДанные.Write(ИмяВременногоФайла);
		РеквизитТабличныйДокумент.Clear();
		РеквизитТаблицаЗначений.Clear();
		РеквизитТабличныйДокумент.Read(ИмяВременногоФайла,SpreadsheetDocumentValuesReadingMode.Value);
		DeleteFiles(ИмяВременногоФайла);
		РеквизитНижняяГраницаДокумента = РеквизитТабличныйДокумент.TableHeight;
		РеквизитСтолбецНоменклатуры = 1;
		РеквизитСтолбецСтоимости = 2;
		РеквизитВерхняяГраницаДокумента = 1;
		If РеквизитНижняяГраницаДокумента > 0 AND РеквизитТабличныйДокумент.TableWidth > 1 Then
			СтрокаТаблицы = РеквизитВерхняяГраницаДокумента;
			While СтрокаТаблицы <= РеквизитНижняяГраницаДокумента Do
				Номенклатура = РеквизитТабличныйДокумент.Area("R" + String(СтрокаТаблицы) + "C" + String(РеквизитСтолбецНоменклатуры)).Text;
				СтоимостьТекст = РеквизитТабличныйДокумент.Area("R" + String(СтрокаТаблицы) + "C" + String(РеквизитСтолбецСтоимости)).Text;
				Try
					Стоимость = Number(СтоимостьТекст);
				Except
					Стоимость = 0;
				EndTry;	
				If NOT IsBlankString(Номенклатура) AND Стоимость > 0 Then
					НоменклатураКаталога = Catalogs.Номенклатура.FindByDescription(Номенклатура);
					If  NOT НоменклатураКаталога.IsEmpty() Then
						Флаг = True;
						For Each СтрокаТЗ In РеквизитТаблицаЗначений Do
							If СтрокаТЗ.Номенклатура = НоменклатураКаталога Then
								Флаг = False;
								Break;
							EndIf;
						EndDo;
						If Флаг Then
							СтрокаТЗ = РеквизитТаблицаЗначений.Add();
							// СтрокаТЗ.Номенклатура = Номенклатура;
							СтрокаТЗ.Номенклатура = НоменклатураКаталога;
							СтрокаТЗ.Стоимость = Стоимость;
							СтрокаТЗ.Количество = 1;
						EndIf;
					EndIf;
				EndIf;
				СтрокаТаблицы = СтрокаТаблицы + 1;
        	EndDo;
		Else 
			Return;
		EndIf;
	Except
		Message(ErrorDescription());
		Return;
	EndTry;
	
	//Поток = ДДанные.OpenStreamForRead();
	//РеквизитТабличныйДокумент.Read(Поток, SpreadsheetDocumentValuesReadingMode.Text, SpreadsheetDocumentFileType.XLS);
	//Поток.Close();
EndProcedure

&AtClient
Async Procedure КомандаПрочитатьЕхселФайл(Command)
	ДиалогВыбора = New FileDialog(FileDialogMode.Open);
	ДиалогВыбора.Title = "Файл таблицы с номенклатурой и ее стоимостью";
	ДиалогВыбора.Filter = "Документ Excel (*.xls;*.xlsx)|*.xls;*.xlsx";   
	ДиалогВыбора.Preview = False;
	ДиалогВыбора.Multiselect = False;
	РезультатВыбора = Await ДиалогВыбора.ChooseAsync();
	If РезультатВыбора <> Undefined Then
		Файл = New File(ДиалогВыбора.FullFileName);
		РасширениеИмениФайла = Файл.Extension;
		ДДанные = New BinaryData(Файл.FullName);
		АдресВХ = PutToTempStorage(ДДанные);
		ПрочитатьИзВХНаСервере(АдресВХ, РасширениеИмениФайла);
	EndIf;
	
	
EndProcedure

&AtServer
Procedure СоздатьЗаказТоваровПоставщикуAtServer()
	//If NOT (РеквизитТаблицаЗначений.Count() < 1 OR РеквизитКонтрагент.IsEmpty() OR РеквизитОтветственный.IsEmpty()) Then
	If ValueIsFilled(РеквизитТаблицаЗначений) AND ValueIsFilled(РеквизитКонтрагент) AND ValueIsFilled(РеквизитОтветственный) Then
		ДокЗаказТоваровПоставщику = Documents.ЗаказТоваровПоставщику.CreateDocument();
		ДокЗаказТоваровПоставщику.Date = CurrentDate();
		ДокЗаказТоваровПоставщику.Контрагент = РеквизитКонтрагент;
		ДокЗаказТоваровПоставщику.Ответственный = РеквизитОтветственный;
		ДокЗаказТоваровПоставщику.Комментарий = "документ создан при помощи обработки «Загрузка данных из Excel»";
		For Each СтрокаТЗ In РеквизитТаблицаЗначений Do
			ДокЗаказТоваровПоставщикуТЧ = ДокЗаказТоваровПоставщику.Товары.Add();
			ДокЗаказТоваровПоставщикуТЧ.Номенклатура = СтрокаТЗ.Номенклатура;
			ДокЗаказТоваровПоставщикуТЧ.Стоимость = СтрокаТЗ.Стоимость;
			ДокЗаказТоваровПоставщикуТЧ.Количество = СтрокаТЗ.Количество;
		EndDo;
		ДокЗаказТоваровПоставщику.Write(DocumentWriteMode.Write);
		РеквизитТабличныйДокумент.Clear();
		РеквизитТаблицаЗначений.Clear();
	Else
		Message("Значения полей не заполнены");
	EndIf;		
EndProcedure

&AtClient
Procedure СоздатьЗаказТоваровПоставщику(Command)
	СоздатьЗаказТоваровПоставщикуAtServer();
EndProcedure 


