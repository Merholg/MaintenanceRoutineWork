&НаСервере
Процедура коммРассчитатьПодробныйПланРаботНаСервере()
	Если Не (ЭтаФорма.реквРасчетныйГод.Пустая() Или ЭтаФорма.реквСистема.Пустая()) Тогда 
		РассчетныйГод = ЭтаФорма.реквРасчетныйГод;
		Система = ЭтаФорма.реквСистема;
		
		Если Есть37Строк(РассчетныйГод) Тогда 
			
			НаборЗаписейГрафикРаботПоКонструкциям = РегистрыСведений.ГрафикРаботПоКонструкциям.СоздатьНаборЗаписей();
			НаборЗаписейГрафикРаботПоКонструкциям.Отбор.Система.Установить(Система);
			НаборЗаписейГрафикРаботПоКонструкциям.Отбор.РассчетныйГод.Установить(РассчетныйГод);
			НаборЗаписейГрафикРаботПоКонструкциям.Прочитать();
			Для Каждого ЗаписьГрафикРаботПоКонструкциям Из НаборЗаписейГрафикРаботПоКонструкциям Цикл 
				НаборЗаписейГрафикРаботПоКонструкциям.Удалить(ЗаписьГрафикРаботПоКонструкциям);
			КонецЦикла;

			МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
			ЗапросРабот = Новый Запрос; 
			ЗапросРабот.МенеджерВременныхТаблиц = МенеджерВТ;
			ЗапросРабот.Текст = "
			|	ВЫБРАТЬ
			|		СпР.Ссылка КАК Работа,
			|		СпС.Код КАК КодСистема
			|	ПОМЕСТИТЬ ВТРаботы	
			|	ИЗ
			|		Справочник.РегламентныеРаботы КАК СпР
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Системы КАК СпС
			|		ПО СпР.Система = СпС.Ссылка
			|	;
			|	ВЫБРАТЬ
			|		Р.Работы КАК Работа,
			|		Р.Конструкции КАК Конструкция 
			|	ПОМЕСТИТЬ ВТРаботыКонструкции	
			|	ИЗ 
			|		РегистрСведений.РаботыПоКонструкциям КАК Р
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРаботы КАК ВТР
			|		ПО Р.Работы = ВТР.Работа
			|	ГДЕ
			|		ГОД(Р.Период) = &РассчетныйГод И ВТР.КодСистема = &КодСистема
			|	;
			|	ВЫБРАТЬ
			|		ВТРК.Работа КАК Работа
			|	ИЗ 
			|		ВТРаботыКонструкции КАК ВТРК
			|	СГРУППИРОВАТЬ ПО
			|		ВТРК.Работа
			|	";
		    
			ЗапросКонструкцийРаботы = Новый Запрос; 
			ЗапросКонструкцийРаботы.МенеджерВременныхТаблиц = МенеджерВТ;
			ЗапросКонструкцийРаботы.Текст = "
			|	ВЫБРАТЬ
			|		РК.Конструкция КАК Конструкция
			|	ИЗ
			|		ВТРаботыКонструкции КАК РК
			|	ГДЕ
			|		РК.Работа = &Работа
			|	";

			ЗапросРабот.УстановитьПараметр("КодСистема", Система.Код);
			ЗапросРабот.УстановитьПараметр("РассчетныйГод", РассчетныйГод.Код);
			ТаблицаРабот = ЗапросРабот.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);

			МесяцаГода = Новый Массив(12);
    		МесяцаГода[0] = "Январь";
    		МесяцаГода[1] = "Февраль";
    		МесяцаГода[2] = "Март";
    		МесяцаГода[3] = "Апрель";
    		МесяцаГода[4] = "Май";
    		МесяцаГода[5] = "Июнь";
    		МесяцаГода[6] = "Июль";
    		МесяцаГода[7] = "Август";
    		МесяцаГода[8] = "Сентябрь";
    		МесяцаГода[9] = "Октябрь";
    		МесяцаГода[10] = "Ноябрь";
    		МесяцаГода[11] = "Декабрь";
			
			РабочиеДниМесяца = Новый ТаблицаЗначений;
			РабочиеДниМесяца.Колонки.Добавить("ЧислоМесяца", Новый ОписаниеТипов("Число"));
			РабочиеДниМесяца.Колонки.Добавить("МассивРабКона", Новый ОписаниеТипов("Массив"));
			
		    ТаблицаКалендаря = РассчетныйГод.ТаблицаКалендаря;

			ИндексРаботаКонструкция = Новый ТаблицаЗначений;
			ИндексРаботаКонструкция.Колонки.Добавить("Работа", Новый ОписаниеТипов("СправочникСсылка.РегламентныеРаботы"));
			ИндексРаботаКонструкция.Колонки.Добавить("Конструкция", Новый ОписаниеТипов("СправочникСсылка.Конструкции"));

			Для Индекс = 0 По 11 Цикл // Месяцы года
				РабочиеДниМесяца.Очистить();
				ИндексРаботаКонструкция.Очистить();
				Для Каждого СтрТаблицаКалендаря из ТаблицаКалендаря Цикл
					Если 0 < СтрТаблицаКалендаря[МесяцаГода[Индекс]] Тогда  // В текущем месяце только рабочие дни
						СтрРабочиеДниМесяца = РабочиеДниМесяца.Добавить();
						СтрРабочиеДниМесяца.ЧислоМесяца = СтрТаблицаКалендаря[МесяцаГода[Индекс]];
						СтрРабочиеДниМесяца.МассивРабКона = Новый Массив;
					КонецЕсли;								
				КонецЦикла;
				КоличествоРабочиеДниМесяца = РабочиеДниМесяца.Количество();
				КоличествоРабочихНедель = Цел(КоличествоРабочиеДниМесяца / 5);
				
				Для Каждого СтрТаблицаРабот Из ТаблицаРабот Цикл
					Работа = СтрТаблицаРабот.Работа; 
					Если Работа[МесяцаГода[Индекс]] Тогда
						//РаботаНаименование = Работа.Наименование;
						//РаботаПолноеНаименование = Работа.ПолноеНаименование;
						РаботаПереодичность = Работа.Переодичность;
						ЗапросКонструкцийРаботы.УстановитьПараметр("Работа", Работа);
//						ТаблицаКонструкцийРаботы = ЗапросКонструкцийРаботы.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);
						ВыборкаКонструкцийРаботы = ЗапросКонструкцийРаботы.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
						Пока ВыборкаКонструкцийРаботы.Следующий() Цикл 
							СтрИндексРаботаКонструкция = ИндексРаботаКонструкция.Добавить();
							СтрИндексРаботаКонструкция.Работа = Работа;
							СтрИндексРаботаКонструкция.Конструкция = ВыборкаКонструкцийРаботы.Конструкция;
							ИндексРК = ИндексРаботаКонструкция.Количество() - 1;
							/////////////////////////////////////////					
							Если Перечисления.Периоды.разВДень = РаботаПереодичность Тогда
								Для Каждого СтрРабочиеДниМесяца Из РабочиеДниМесяца Цикл 
									СтрРабочиеДниМесяца.МассивРабКона.Добавить(ИндексРК); // Добавить в каждый рабочий день
								КонецЦикла;
							/////////////////////////////////////////						
							ИначеЕсли Перечисления.Периоды.разВНеделю = РаботаПереодичность Тогда
							    МинМахРабот = 0;
								МинДеньПервойНедели = 1;
								ФлагДеньПервойНедели = Истина;
								Если 5 > КоличествоРабочиеДниМесяца Тогда 
									КоличествоДнейПервойНедели = КоличествоРабочиеДниМесяца;
								Иначе 									
									КоличествоДнейПервойНедели = 5;
								КонецЕсли;
								Для ДеньПервойНедели = 1 По КоличествоДнейПервойНедели Цикл
									МахРабот = РабочиеДниМесяца[ДеньПервойНедели - 1].МассивРабКона.Количество(); // Найти максимальное количество работ в этот день каждой недели
									Для НомерНедели = 2 По КоличествоРабочихНедель Цикл 
										Если МахРабот < РабочиеДниМесяца[ДеньПервойНедели - 1 + (НомерНедели - 1) * 5].МассивРабКона.Количество() Тогда
											МахРабот = РабочиеДниМесяца[ДеньПервойНедели - 1 + (НомерНедели - 1) * 5].МассивРабКона.Количество();
										КонецЕсли;
									КонецЦикла;
									Если ФлагДеньПервойНедели Тогда 
										ФлагДеньПервойНедели = Ложь;
										МинМахРабот = МахРабот;
										МинДеньПервойНедели = ДеньПервойНедели;
									Иначе 
										Если МинМахРабот > МахРабот Тогда // Найти минимальное количество работ среди максимального в каждый день недели
											МинМахРабот = МахРабот;
											МинДеньПервойНедели = ДеньПервойНедели;
										КонецЕсли;	
									КонецЕсли;										
								КонецЦикла;
								РабочиеДниМесяца[МинДеньПервойНедели].МассивРабКона.Добавить(ИндексРК);
								Для НомерНедели = 2 По КоличествоРабочихНедель Цикл 
									РабочиеДниМесяца[МинДеньПервойНедели - 1 + (НомерНедели - 1) * 5].МассивРабКона.Добавить(ИндексРК);
								КонецЦикла;
							/////////////////////////////////////////					
							ИначеЕсли Перечисления.Периоды.разВнескМесяцев = РаботаПереодичность Тогда
								МинРабот = 0;
								ФлагРабочиеДниМесяца = Истина;
								МинСтрРабочиеДниМесяца = Неопределено;
								Для Каждого СтрРабочиеДниМесяца Из РабочиеДниМесяца Цикл 
									Если ФлагРабочиеДниМесяца Тогда                        // Найти день месяца с минимальным количеством работ
										ФлагРабочиеДниМесяца = Ложь;
										МинРабот = СтрРабочиеДниМесяца.МассивРабКона.Количество();
										МинСтрРабочиеДниМесяца = СтрРабочиеДниМесяца;
									Иначе 										
										Если СтрРабочиеДниМесяца.МассивРабКона.Количество() < МинРабот Тогда 
											МинРабот = СтрРабочиеДниМесяца.МассивРабКона.Количество();
											МинСтрРабочиеДниМесяца = СтрРабочиеДниМесяца;
										КонецЕсли;											
									КонецЕсли;
								КонецЦикла;
								Если Неопределено <> МинСтрРабочиеДниМесяца Тогда  
					            	МинСтрРабочиеДниМесяца.МассивРабКона.Добавить(ИндексРК);
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
				// все работы по конструкциям за месяц залить в регистр
				Для Каждого СтрРабочиеДниМесяца Из РабочиеДниМесяца Цикл
					Для Каждого ЭлементМассивРабКона Из СтрРабочиеДниМесяца.МассивРабКона Цикл 
						НоваяЗаписьГрафикРаботПоКонструкциям = НаборЗаписейГрафикРаботПоКонструкциям.Добавить();
						НоваяЗаписьГрафикРаботПоКонструкциям.Период = Дата(РассчетныйГод.Код, Индекс + 1, СтрРабочиеДниМесяца.ЧислоМесяца);
					    НоваяЗаписьГрафикРаботПоКонструкциям.Работа = ИндексРаботаКонструкция[ЭлементМассивРабКона].Работа;
						НоваяЗаписьГрафикРаботПоКонструкциям.Конструкция = ИндексРаботаКонструкция[ЭлементМассивРабКона].Конструкция;
						НоваяЗаписьГрафикРаботПоКонструкциям.Система = Система;
						НоваяЗаписьГрафикРаботПоКонструкциям.РассчетныйГод = РассчетныйГод;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
        	НаборЗаписейГрафикРаботПоКонструкциям.Записать(); 
		Иначе
			Сообщить("Календарь на этот год не заполнен");
		КонецЕсли;
	КонецЕсли;		
КонецПроцедуры
