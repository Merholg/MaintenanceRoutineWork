//&НаСервере
//Процедура _комСохранитьНаСервере()
//	Если НЕ (Объект.НаименованиеРаботы.Пустая() Или Объект.ГодПланированияРабот.Пустая()) Тогда
//		//МодульПериодов.ФорматЗаписиПериода(Объект.ГодВыполненияРаботы);

//		тзТаблицаКонструкций = Новый ТаблицаЗначений(); // Таблица Конструкций куда конвертируется Дерево Конструкций
//		тзТаблицаКонструкций.Колонки.Добавить("Конструкция", Новый ОписаниеТипов("СправочникСсылка.Конструкции"));
//		тзТаблицаКонструкций.Колонки.Добавить("Назначенность", Новый ОписаниеТипов("Булево"));

//		дзДеревоКонструкций = РеквизитФормыВЗначение("реквДеревоКонструкций");
//		ПреобразоватьВТЗРекурсия(дзДеревоКонструкций, тзТаблицаКонструкций);
//	
//		тзТаблицаКонструкцийИстина = Новый ТаблицаЗначений();  // Таблица отмеченных конструкций
//		тзТаблицаКонструкцийИстина.Колонки.Добавить("Конструкция", Новый ОписаниеТипов("СправочникСсылка.Конструкции"));
//		Для Каждого тСтр Из тзТаблицаКонструкций Цикл
//			Если тСтр.Назначенность Тогда 
//				Стр = тзТаблицаКонструкцийИстина.Добавить();
//    			Стр.Конструкция = тСтр.Конструкция;
//			КонецЕсли;
//		КонецЦикла;
//		
//		МенеджерВТ = Новый МенеджерВременныхТаблиц;
//	
//		ЗапросСозданиеВременныхТаблиц = Новый Запрос; 
//		ЗапросСозданиеВременныхТаблиц.МенеджерВременныхТаблиц = МенеджерВТ;
//		ЗапросСозданиеВременныхТаблиц.Текст = "ВЫБРАТЬ Т.Конструкция ПОМЕСТИТЬ ВТОтмеченныхКонструкций ИЗ &Таб КАК Т;
//		|	ВЫБРАТЬ
//		|		Р.Конструкции КАК Конструкции
//		|	ПОМЕСТИТЬ 
//		|		ВТРаботыПоКонструкциям
//		|	ИЗ
//		|		РегистрСведений.РаботыПоКонструкциям КАК Р
//		|	ГДЕ
//		|		ГОД(Р.Период) = ГОД(&Период) И Р.Работы = &Работы";
//		ЗапросСозданиеВременныхТаблиц.УстановитьПараметр("Таб",тзТаблицаКонструкцийИстина);
//		ЗапросСозданиеВременныхТаблиц.УстановитьПараметр("Работы", Объект.НаименованиеРаботы);
//		ЗапросСозданиеВременныхТаблиц.УстановитьПараметр("Период", Дата(Объект.ГодПланированияРабот.Код, 01, 01));
//		ЗапросСозданиеВременныхТаблиц.Выполнить();
//    	
//		ЗапросДобавленныхКонструкций = Новый Запрос; // Узнать добавлялось ли чтото в дерево относительно регистра
//		ЗапросДобавленныхКонструкций.Текст = "ВЫБРАТЬ
//		|		К.Конструкция КАК Конструкции
//		|	ИЗ
//		|		ВТОтмеченныхКонструкций КАК К
//		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРаботыПоКонструкциям КАК Р
//		|			ПО Р.Конструкции = К.Конструкция
//		|	ГДЕ
//		|		Р.Конструкции ЕСТЬ NULL";
//		ЗапросДобавленныхКонструкций.МенеджерВременныхТаблиц = МенеджерВТ;
//		РезультатЗапросДобавленныхКонструкций = ЗапросДобавленныхКонструкций.Выполнить();
//		тзДобавленныхКонструкций = РезультатЗапросДобавленныхКонструкций.Выгрузить(ОбходРезультатаЗапроса.Прямой);
//		
//		ЗапросУдаленныхКонструкций = Новый Запрос; // Узнать удалялось ли чтото из дерево относительно регистра
//		ЗапросУдаленныхКонструкций.Текст = "ВЫБРАТЬ
//		|		Р.Конструкции КАК Конструкции
//		|	ИЗ
//		|		ВТОтмеченныхКонструкций КАК К
//		|			ПРАВОЕ СОЕДИНЕНИЕ ВТРаботыПоКонструкциям КАК Р
//		|			ПО Р.Конструкции = К.Конструкция
//		|	ГДЕ
//		|		К.Конструкция ЕСТЬ NULL";
//		ЗапросУдаленныхКонструкций.МенеджерВременныхТаблиц = МенеджерВТ;
//		РезультатЗапросУдаленныхКонструкций = ЗапросУдаленныхКонструкций.Выполнить();
//		тзУдаленныхКонструкций = РезультатЗапросУдаленныхКонструкций.Выгрузить(ОбходРезультатаЗапроса.Прямой);
//		
//		Если (тзДобавленныхКонструкций.Количество() > 0) Или (тзУдаленныхКонструкций.Количество() > 0) Тогда
//			НаборЗаписей = РегистрыСведений.РаботыПоКонструкциям.СоздатьНаборЗаписей();
//			НаборЗаписей.Отбор.Период.Установить(Дата(Объект.ГодПланированияРабот.Код, 01, 01));
//			НаборЗаписей.Отбор.Работы.Установить(Объект.НаименованиеРаботы);
//			НаборЗаписей.Прочитать();
//			Для Каждого Запись Из НаборЗаписей Цикл 
//				НайденнаяСтрока = тзУдаленныхКонструкций.Найти(Запись.Конструкции, "Конструкции");
//				Если НайденнаяСтрока <> Неопределено Тогда
//					НаборЗаписей.Удалить(Запись);
//				КонецЕсли;
//			КонецЦикла;
//			Для Каждого Стр Из тзДобавленныхКонструкций Цикл
//				НоваяЗапись = НаборЗаписей.Добавить();
//				НоваяЗапись.Период = Дата(Объект.ГодПланированияРабот.Код, 01, 01);
//				НоваяЗапись.Работы = Объект.НаименованиеРаботы;
//				НоваяЗапись.Конструкции = Стр.Конструкции;
//			КонецЦикла;
//			НаборЗаписей.Записать(); 
//			
//			ПоказВсехКонструкцийПриИзмененииНаСервере();
//			
//		КонецЕсли;
//	КонецЕсли;
//КонецПроцедуры

