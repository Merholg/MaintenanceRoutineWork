&НаСервере
Процедура коммРассчитатьПодробныйПланРаботНаСервере()
	Если Не (ЭтаФорма.реквРасчетныйГод.Пустая() Или ЭтаФорма.реквСистема.Пустая()) Тогда 
		РассчетныйГод = ЭтаФорма.реквРасчетныйГод;
		Система = ЭтаФорма.реквСистема;
		
		Если Есть37Строк(РассчетныйГод) Тогда 
			
			НаборЗаписейГрафикРаботПоКонструкциям = РегистрыСведений.ГрафикРаботПоКонструкциям.СоздатьНаборЗаписей();
			НаборЗаписейГрафикРаботПоКонструкциям.Отбор.Система.Установить(Система);
			НаборЗаписейГрафикРаботПоКонструкциям.Отбор.РассчетныйГод.Установить(РассчетныйГод);
        	НаборЗаписейГрафикРаботПоКонструкциям.Записать();
			НовыйНаборЗаписейГрафикРаботПоКонструкциям = РегистрыСведений.ГрафикРаботПоКонструкциям.СоздатьНаборЗаписей();

			МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
			ЗапросРабот = Новый Запрос; 
			ЗапросРабот.МенеджерВременныхТаблиц = МенеджерВТ;
			ЗапросРабот.Текст = "
			|	ВЫБРАТЬ
			|		Р.Работы КАК Работа,
			|		Р.Конструкции КАК Конструкция 
			|	ПОМЕСТИТЬ ВТРаботыКонструкции	
			|	ИЗ 
			|		РегистрСведений.РаботыПоКонструкциям КАК Р
			|	ГДЕ
			|		ГОД(Р.Период) = &РассчетныйГод И Р.Работы.Система.Код = &КодСистема
			|	;
			|	
			|	ВЫБРАТЬ
			|		ВТРК.Работа КАК Работа
			|	ПОМЕСТИТЬ ВТРКГ	
			|	ИЗ 
			|		ВТРаботыКонструкции КАК ВТРК
			|	СГРУППИРОВАТЬ ПО
			|		ВТРК.Работа
			|	";
			
			ЗапросРабот.УстановитьПараметр("КодСистема", Система.Код);
			ЗапросРабот.УстановитьПараметр("РассчетныйГод", РассчетныйГод.Код);
			ЗапросРабот.Выполнить();
			
			ЗапросПереодическихРабот = Новый Запрос;
			ЗапросПереодическихРабот.МенеджерВременныхТаблиц = МенеджерВТ;
			ЗапросПереодическихРабот.Текст = "
			|	ВЫБРАТЬ
			|		ВТРКГ.Работа КАК Работа
			|	ИЗ
			|		ВТРКГ
			|	ГДЕ
			|		ВТРКГ.Работа.Переодичность = &Переодичность
			|	УПОРЯДОЧИТЬ ПО
			|		ВТРКГ.Работа.НомерВСистеме ВОЗР
			|	";
			ЗапросПереодическихРабот.УстановитьПараметр("Переодичность", Перечисления.Периоды.разВНеделю);
			ВыборкаНедельныхРабот = ЗапросПереодическихРабот.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
			ЗапросПереодическихРабот.УстановитьПараметр("Переодичность", Перечисления.Периоды.разВнескМесяцев);
			ВыборкаМесячныхРабот = ЗапросПереодическихРабот.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
			ЗапросПереодическихРабот.УстановитьПараметр("Переодичность", Перечисления.Периоды.разВДень);
			ВыборкаЕжедневныхРабот = ЗапросПереодическихРабот.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
            // Работы по заявкам (Перечисления.Периоды.ПоЗаявкам) в график не вносятся
		    
			ЗапросКонструкцийРаботы = Новый Запрос; 
			ЗапросКонструкцийРаботы.МенеджерВременныхТаблиц = МенеджерВТ;
			ЗапросКонструкцийРаботы.Текст = "
			|	ВЫБРАТЬ
			|		РК.Конструкция КАК Конструкция
			|	ИЗ
			|		ВТРаботыКонструкции КАК РК
			|	ГДЕ
			|		РК.Работа = &Работа
			|	";


			МесяцаГода = Новый Массив(12);
    		МесяцаГода[0] = "Январь";
    		МесяцаГода[1] = "Февраль";
    		МесяцаГода[2] = "Март";
    		МесяцаГода[3] = "Апрель";
    		МесяцаГода[4] = "Май";
    		МесяцаГода[5] = "Июнь";
    		МесяцаГода[6] = "Июль";
    		МесяцаГода[7] = "Август";
    		МесяцаГода[8] = "Сентябрь";
    		МесяцаГода[9] = "Октябрь";
    		МесяцаГода[10] = "Ноябрь";
    		МесяцаГода[11] = "Декабрь";
			
			РабочиеДниМесяца = Новый ТаблицаЗначений;
			РабочиеДниМесяца.Колонки.Добавить("ЧислоМесяца", Новый ОписаниеТипов("Число"));
			РабочиеДниМесяца.Колонки.Добавить("МассивРабКона", Новый ОписаниеТипов("Массив"));
			
		    ТаблицаКалендаря = РассчетныйГод.ТаблицаКалендаря;

			ИндексРаботаКонструкция = Новый ТаблицаЗначений;
			ИндексРаботаКонструкция.Колонки.Добавить("Работа", Новый ОписаниеТипов("СправочникСсылка.РегламентныеРаботы"));
			ИндексРаботаКонструкция.Колонки.Добавить("Конструкция", Новый ОписаниеТипов("СправочникСсылка.Конструкции"));

			Для Индекс = 0 По 11 Цикл // Месяцы года
				РабочиеДниМесяца.Очистить();
				ИндексРаботаКонструкция.Очистить();
				Для Каждого СтрТаблицаКалендаря из ТаблицаКалендаря Цикл
					Если 0 < СтрТаблицаКалендаря[МесяцаГода[Индекс]] Тогда  // В текущем месяце только рабочие дни
						СтрРабочиеДниМесяца = РабочиеДниМесяца.Добавить();
						СтрРабочиеДниМесяца.ЧислоМесяца = СтрТаблицаКалендаря[МесяцаГода[Индекс]];
						СтрРабочиеДниМесяца.МассивРабКона = Новый Массив;
					КонецЕсли;								
				КонецЦикла;
				КоличествоРабочиеДниМесяца = РабочиеДниМесяца.Количество();
				КоличествоРабочихНедель = Цел(КоличествоРабочиеДниМесяца / 5);
				// получить работы по конструкциям за месяц
				Пока ВыборкаНедельныхРабот.Следующий() Цикл  // Сначала недельные работы
					Работа = ВыборкаНедельныхРабот.Работа;
					Если Работа[МесяцаГода[Индекс]] Тогда  // Если работа выполняется в этом месяце
						ЗапросКонструкцийРаботы.УстановитьПараметр("Работа", Работа);
					    ВыборкаКонструкцийРаботы = ЗапросКонструкцийРаботы.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
						Пока ВыборкаКонструкцийРаботы.Следующий() Цикл
							СтрИндексРаботаКонструкция = ИндексРаботаКонструкция.Добавить();
							СтрИндексРаботаКонструкция.Работа = Работа;
							СтрИндексРаботаКонструкция.Конструкция = ВыборкаКонструкцийРаботы.Конструкция;
							ИндексРК = ИндексРаботаКонструкция.Количество() - 1; // Индекс только что добавленой работоконструкции
							МинМахРабот = 0;
							МинДеньПервойНедели = 1;
							ФлагДеньПервойНедели = Истина;
							КоличествоДнейПервойНедели = ?(КоличествоРабочиеДниМесяца < 5, КоличествоРабочиеДниМесяца, 5);
							Для ДеньПервойНедели = 1 По КоличествоДнейПервойНедели Цикл // Найти максимальное количество работ в этот день каждой недели
								МахРабот = РабочиеДниМесяца[ДеньПервойНедели - 1].МассивРабКона.Количество();
								Для НомерНедели = 2 По КоличествоРабочихНедель Цикл 
									Если МахРабот < РабочиеДниМесяца[ДеньПервойНедели - 1 + (НомерНедели - 1) * 5].МассивРабКона.Количество() Тогда
										МахРабот = РабочиеДниМесяца[ДеньПервойНедели - 1 + (НомерНедели - 1) * 5].МассивРабКона.Количество();
									КонецЕсли;
								КонецЦикла;
								Если ФлагДеньПервойНедели Тогда 
									ФлагДеньПервойНедели = Ложь;
									МинМахРабот = МахРабот;
									МинДеньПервойНедели = ДеньПервойНедели;
								Иначе 
									Если МинМахРабот > МахРабот Тогда // Найти минимальное количество работ среди максимального в каждый день недели
										МинМахРабот = МахРабот;
										МинДеньПервойНедели = ДеньПервойНедели;
									КонецЕсли;	
								КонецЕсли;										
							КонецЦикла;
							Если Не ФлагДеньПервойНедели Тогда // и если есть хоть один рабочий день
								РабочиеДниМесяца[МинДеньПервойНедели].МассивРабКона.Добавить(ИндексРК);
								Для НомерНедели = 2 По КоличествоРабочихНедель Цикл 
									РабочиеДниМесяца[МинДеньПервойНедели - 1 + (НомерНедели - 1) * 5].МассивРабКона.Добавить(ИндексРК);
								КонецЦикла;
							КонецЕсли;								
						КонецЦикла;					
					КонецЕсли;
				КонецЦикла;
				Пока ВыборкаМесячныхРабот.Следующий() Цикл // Потом месячные
					Работа = ВыборкаМесячныхРабот.Работа;
					Если Работа[МесяцаГода[Индекс]] Тогда  // Если работа выполняется в этом месяце
						ЗапросКонструкцийРаботы.УстановитьПараметр("Работа", Работа);
					    ВыборкаКонструкцийРаботы = ЗапросКонструкцийРаботы.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
						Пока ВыборкаКонструкцийРаботы.Следующий() Цикл
							СтрИндексРаботаКонструкция = ИндексРаботаКонструкция.Добавить();
							СтрИндексРаботаКонструкция.Работа = Работа;
							СтрИндексРаботаКонструкция.Конструкция = ВыборкаКонструкцийРаботы.Конструкция;
							ИндексРК = ИндексРаботаКонструкция.Количество() - 1; // Индекс только что добавленой работоконструкции
							ФлагРабочиеДниМесяца = Истина;
							МинСтрРабочиеДниМесяца = Неопределено;
							Для Каждого СтрРабочиеДниМесяца Из РабочиеДниМесяца Цикл // Найти день месяца с минимальным количеством работ
								Если ФлагРабочиеДниМесяца Тогда                        
									ФлагРабочиеДниМесяца = Ложь;
									МинСтрРабочиеДниМесяца = СтрРабочиеДниМесяца;
								Иначе 										
									Если СтрРабочиеДниМесяца.МассивРабКона.Количество() < МинСтрРабочиеДниМесяца.МассивРабКона.Количество() Тогда 
										МинСтрРабочиеДниМесяца = СтрРабочиеДниМесяца;
									КонецЕсли;											
								КонецЕсли;
							КонецЦикла;
							Если Не ФлагРабочиеДниМесяца Тогда // и если есть хоть один рабочий день - добавить индекс работоконструкции туда, где количество работоконструкций минимально 
					            МинСтрРабочиеДниМесяца.МассивРабКона.Добавить(ИндексРК);
							КонецЕсли;
						КонецЦикла;					
					КонецЕсли;
				КонецЦикла;
				Пока ВыборкаЕжедневныхРабот.Следующий() Цикл // И затем ежедневные
					Работа = ВыборкаЕжедневныхРабот.Работа;
					Если Работа[МесяцаГода[Индекс]] Тогда  // Если работа выполняется в этом месяце
						ЗапросКонструкцийРаботы.УстановитьПараметр("Работа", Работа);
					    ВыборкаКонструкцийРаботы = ЗапросКонструкцийРаботы.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
						Пока ВыборкаКонструкцийРаботы.Следующий() Цикл
							СтрИндексРаботаКонструкция = ИндексРаботаКонструкция.Добавить();
							СтрИндексРаботаКонструкция.Работа = Работа;
							СтрИндексРаботаКонструкция.Конструкция = ВыборкаКонструкцийРаботы.Конструкция;
							ИндексРК = ИндексРаботаКонструкция.Количество() - 1; // Индекс только что добавленой работоконструкции
							Для Каждого СтрРабочиеДниМесяца Из РабочиеДниМесяца Цикл 
								СтрРабочиеДниМесяца.МассивРабКона.Добавить(ИндексРК); // Добавить в каждый рабочий день
							КонецЦикла;
						КонецЦикла;					
					КонецЕсли;
				КонецЦикла;
				// все работы по конструкциям за месяц залить в регистр
				Для Каждого СтрРабочиеДниМесяца Из РабочиеДниМесяца Цикл
					Для Каждого ЭлементМассивРабКона Из СтрРабочиеДниМесяца.МассивРабКона Цикл 
						НоваяЗаписьГрафикРаботПоКонструкциям = НовыйНаборЗаписейГрафикРаботПоКонструкциям.Добавить();
						НоваяЗаписьГрафикРаботПоКонструкциям.Период = Дата(РассчетныйГод.Код, Индекс + 1, СтрРабочиеДниМесяца.ЧислоМесяца);
					    НоваяЗаписьГрафикРаботПоКонструкциям.Работа = ИндексРаботаКонструкция[ЭлементМассивРабКона].Работа;
						НоваяЗаписьГрафикРаботПоКонструкциям.Конструкция = ИндексРаботаКонструкция[ЭлементМассивРабКона].Конструкция;
						НоваяЗаписьГрафикРаботПоКонструкциям.Система = Система;
						НоваяЗаписьГрафикРаботПоКонструкциям.РассчетныйГод = РассчетныйГод;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
        	НовыйНаборЗаписейГрафикРаботПоКонструкциям.Записать(); 
		Иначе
			Сообщить("Календарь на этот год не заполнен");
		КонецЕсли;
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура коммРассчитатьПодробныйПланРабот(Команда)
	коммРассчитатьПодробныйПланРаботНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Функция Есть37Строк(РассчетныйГод)
	Если 37 = РассчетныйГод.ТаблицаКалендаря.Количество() Тогда 
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
КонецФункции
	
&НаКлиенте
Процедура полеРасчетныйГодПриИзменении(Элемент)
	Если Не (ЭтаФорма.реквРасчетныйГод.Пустая() Или ЭтаФорма.реквСистема.Пустая()) Тогда 
		РассчетныйГод = ЭтаФорма.реквРасчетныйГод;
		Если Есть37Строк(РассчетныйГод) Тогда 
			Элементы.кнопРассчитатьПодробныйПланРабот.Доступность = Истина;
		Иначе
			Сообщить("Календарь на этот год не заполнен");
		КонецЕсли;
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура полеСистемаПриИзменении(Элемент)
	Если Не (ЭтаФорма.реквРасчетныйГод.Пустая() Или ЭтаФорма.реквСистема.Пустая()) Тогда 
		РассчетныйГод = ЭтаФорма.реквРасчетныйГод;
		Если Есть37Строк(РассчетныйГод) Тогда 
			Элементы.кнопРассчитатьПодробныйПланРабот.Доступность = Истина;
		Иначе
			Сообщить("Календарь на этот год не заполнен");
		КонецЕсли;
	КонецЕсли;		
КонецПроцедуры
